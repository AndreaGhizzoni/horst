.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH HORST 8 "August 21, 2013"
.\" Please adjust this date whenever revising the manpage.
.SH NAME
horst \- Highly Optimized Radio Scanning Tool
.SH SYNOPSIS
.B horst
.RB [\| \-h \|]
.RB [\| \-q \|]
.RB [\| \-s \|] 
.RB [\| \-i 
.IR interface \|] 
.RB [\| \-t
.IR sec \|] 
.RB [\| \-c
.IR IP \|] 
.RB [\| \-C \|] 
.RB [\| \-p
.IR port \|] 
.RB [\| \-e
.IR mac \|] 
.RB [\| \-d
.IR ms \|] 
.RB [\| \-o
.IR file \|] 
.RB [\| \-b
.IR bytes \|]
.RB [\| \-X
.IR name \|]
.RB [\| \-x
.IR command \|]
.SH DESCRIPTION
\fBhorst\fP is a small, lightweight IEEE802.11 wireless LAN analyzer
with a text interface. Its basic function is similar to tcpdump,
Wireshark or Kismet, but it's much smaller and shows different,
aggregated information which is not easily available from other
tools. It is mainly targeted at debugging wireless LANs with a focus
on ad\-hoc (IBSS) mode in larger mesh networks. It can be useful to get
a quick overview of what's going on on all wireless LAN channels and
to identify problems.
.IP \[bu] 2
Shows signal/noise values per station.
.IP \[bu] 2
Calculates channel utilization ("usage") by adding up the amount of time the packets actually occupy the medium.
.IP \[bu] 2
"Spectrum Analyzer" shows signal levels and usage per channel.
.IP \[bu] 2
Graphical packet history, with signal/noise, packet type and physical rat.e
.IP \[bu] 2
Shows all stations per ESSID and the live TSF per node as it is counting.
.IP \[bu] 2
Detects IBSS "splits" (same ESSID but different BSSID \- this  is a common driver problem).
.IP \[bu] 2
Statistics of packets/bytes per physical rate and per packet type.
.IP \[bu] 2
Has some support for mesh protocols (OLSR and batman).
.IP \[bu] 2
Can filter specific packet types, source MAC addresses or BSSIDs.
.IP \[bu] 2
Client/server support for monitoring on remote nodes.
.IP \[bu] 2
Can be controlled via a named pipe.
.IP \[bu] 2
Upload via HTTP or HTTPS of selected node information in JSON format.


.SH OPTIONS
.TP
.BI \-h
Show summary of options.
.TP
.BI \-q
Quiet mode. Don't show user interface. This is only useful in conjunction with running in server mode (\-C), upload mode (\-U) or writing to a file (\-o).
.TP
.BI \-i\  intf
Operate on given interface instead of the default "wlan0". Note that the interface is assumed to be in monitor mode already. See MONITOR MODE below on more information about monitor mode.
.TP
.BI \-t\  sec
Timeout (remove) nodes after not receiving packets from them for this time in seconds (default: 60 sec).
.TP
.BI \-d\  ms
Display update interval. The default value of 100ms can be increased to reduce CPU load.
.TP
.BI \-b\  bytes
Receive buffer size. The receive buffer size can be explicitly set to tune memory consumption and reduce lost packets.
.TP
.BI \-s
Show a poor mans "spectrum analyzer". The same can be achieved by running \fBhorst\fP as normal and pressing the button 's' (Spec); then 'c' (Chan) and 'a' (Automatically change channel).
.TP
.BI \-C
Allow client connections. Server mode. Only one client connection is supported at the moment (default: off).
.TP
.BI \-c\  IP
Connect to a \fBhorst\fP instance running in server-mode at the specified IP address.
.TP
.BI \-p\  port
Use the specified port (default: 4444) for client/server connections.
.TP
.BI \-o\  filename
Write a summary packet info into file. See OUTPUT FILE FORMAT below.
.TP
.BI \-X
Accept control commands on a named pipe (default /tmp/horst).
.TP
.BI "\-X"name
Accept control commands on a named pipe with given name or set pipe name used with -x.
.TP
.BI \-x\  command
Send control command to another horst process who was started with -X and then exit. Multiple commands can be concatenated with ':'. Currently implemented commands are:
    pause              Pause horst processing
    resume             Resume horst processing
    channel=X          Set channel channel number
    channel_auto=X     Automatically change channels (1 or 0)
    channel_dwell=X    Set channel dwell time when automatically changing channel (ms)
    channel_upper=X    Set max channel when automatically changing channel
    outfile=X          Write to outfile named X.
                       If the file is already open, it is cleared and re-openend.
                       If filename is not specified ("outfile=") any existing file
                       is closed and no file is written.
.TP
.BI \-U\  URL
Upload server URL (http:// or https://) where selected node summary information is sent to in JSON format. Only available when compiled with UPLOAD=1 and libcurl is installed.
.TP
.BI \-u\  sec
Upload interval in seconds (2). Only used in conjuction with the -U option.
.TP
.BI \-a\  string
Upload API key for Upload JSON String. Only used in conjuction with the -U option.
.TP
.BI \-e\  MAC
Filter all MAC addresses except these, to show only packets originating from the specified MAC addresses. This option can be specified multiple times.
.TP
.BI \-f\  pkt_type
Filter all packets except these. This option can be specified multiple times. For valid packet names see pkt_types in the OUTPUT FILE FORMAT section below.
.TP
.BI \-m\  (AP|STA|ADH|PRB|WDS)
Only show/include nodes of this mode. Note that the mode is infered by the information of packets we received and it may take some time until a node is properly classified. This option can be specified multiple times.


.SH MONITOR MODE

\fBhorst\fP should work with any wireleass LAN card and driver which supports monitor mode, with either "prism2" or "radiotap" headers. This includes most modern mac80211-based drivers.

You have to put your card in monitor mode and set the channel manually before
you start \fBhorst\fP. Usually this has to be done as root.

.TP
Using iw:
.nf
iw wlan0 interface add mon0 type monitor

or

sudo iw wlan1 set type monitor
sudo iw wlan1 set channel 6 

.fi

.TP
Using iwconfig:
.nf
iwconfig wlan0 mode monitor
iwconfig wlan0 channel 1
ifconfig wlan0 up
.fi

.TP
Using madwifi:
wlanconfig wlan0 create wlandev wifi0 wlanmode monitor

.TP
Using hostap:
.nf
iwconfig wlan0 mode monitor
iwpriv wlan0 monitor_type 1
.fi

.SH OUTPUT FILE FORMAT

The format of the output file (-o flag) is a comma separated list of the following fields in the following order, one packet each line.

.TP
packet_type
802.11 MAC packet type name like below:

        BADFCS    Bad frame checksum

        Management frames:
        ASOCRQ    Association request
        ASOCRP    Associaion response
        REASRQ    Reassociation request
        REASRP    Reassociation response
        PROBRQ    Probe request
        PROBRP    Probe response
        TIMING    Timing Advertisement
        BEACON    Beacon
        ATIM      ATIM
        DISASC    Disassociation
        AUTH      Authentication
        DEAUTH    Deauthentication
        ACTION    Action
        ACTNOA    Action No Ack

        Control frames:
        CTWRAP    Control Wrapper
        BACKRQ    Block Ack Request
        BACK      Block Ack
        PSPOLL    PS-Poll
        RTS       RTS
        CTS       CTS
        ACK       ACK
        CFEND     CF-End
        CFENDK    CF-End + CF-Ack

        Data frames:
        DATA      Data
        DCFACK    Data + CF-Ack
        DCFPLL    Data + CF-Poll
        DCFKPL    Data + CF-Ack + CF-Poll
        NULL      Null (no data)
        CFACK     CF-Ack (no data)
        CFPOLL    CF-Poll (no data)
        CFCKPL    CF-Ack + CF-Poll (no data)
        QDATA     QoS Data
        QDCFCK    QoS Data + CF-Ack
        QDCFPL    QoS Data + CF-Poll
        QDCFKP    QoS Data + CF-Ack + CF-Poll
        QDNULL    QoS Null (no data)
        QCFPLL    QoS CF-Poll (no data)
        QCFKPL    QoS CF-Ack + CF-Poll (no data)

.TP
 wlan_src
 Source MAC address

.TP
wlan_dst
Destination MAC address

.TP
wlan_bssid
BSSID

.TP
pkt_types
Packet types, similar to packet_type (above) but as a bit field (types can overlap, e.g. DATA + IP) and can include more info, like IP, ARP, BATMAN, OLSR...

        CTRL        0x000001    WLAN Control frame
        MGMT        0x000002    WLAN Management frame
        DATA        0x000004    WLAN Data frame
        BADFCS      0x000008    WLAN frame checksum (FCS) bad
        BEACON      0x000010    WLAN beacon frame
        PROBE       0x000020    WLAN probe request or response
        ASSOC       0x000040    WLAN associaction request/response frame
        AUTH        0x000080    WLAN authentication frame
        RTSCTS      0x000100    WLAN RTS or CTS
        ACK         0x000200    WLAN ACK or BlockACK
        NULL        0x000400    WLAN NULL Data frame
        QDATA       0x000800    WLAN QoS Data frame (WME/WMM)
        ARP         0x001000    ARP packet
        IP          0x002000    IP packet
        ICMP        0x004000    IP ICMP packet
        UDP         0x008000    IP UDP
        TCP         0x010000    IP TCP
        OLSR        0x020000    OLSR protocol
        BATMAN      0x040000    BATMAND Layer3 or BATMAN-ADV Layer 2 frame
        MESHZ       0x080000    MeshCruzer protocol

.TP
phy_signal
Signal strength in dBm

.TP
phy_noise
Noise in dBm

.TP
phy_snr
Signal to Noise ratio in dB

.TP
wlan_len
Packet length (MAC)

.TP
phy_rate
Physical data rate

.TP
wlan_tsf
TFS timer value

.TP
wlan_essid
ESSID, network name

.TP
wlan_mode
Bit field of operating mode type which is infered from received packets. Modes may overlap, i.e. it is common to see STA and PROBE at the same time.

        AP        0x01      Access Point (AP)
        IBSS      0x02      Ad-hoc node
        STA       0x04      Station (AP client)
        PROBE     0x08      Sent PROBE requests
        4ADDR     0x10      WDS or 4 Address frames

.TP
wlan_channel
Channel number

.TP
wlan_wep
Encryption in use

.TP
ip_src
IP source address (if available)

.TP
ip_dst
IP destionation address (if available)

.TP
olsr_type
OLSR message type (if applicable)

.TP
olsr_neigh
OLSR number of neighbours (if applicable)

.SH SEE ALSO
.BR tcpdump (1),
.BR wireshark (1),
.BR kismet (1),
.BI README

.SH AUTHOR
horst was written by Bruno Randolf <br1@einfach.org>.
.PP
This manual page was written by Antoine Beaupré <anarcat@debian.org>,
for the Debian project (and may be used by others).
